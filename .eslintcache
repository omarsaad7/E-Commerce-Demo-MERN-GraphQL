[{"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\index.js":"1","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\App.js":"2","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\reportWebVitals.js":"3","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Error\\Error.jsx":"4","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Home\\Home.jsx":"5","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\SignIn\\SignIn.jsx":"6","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\signUp\\signUp.jsx":"7","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\ShoppingCart\\Cartt.jsx":"8","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Order\\Order.jsx":"9","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Order\\AllOrders.jsx":"10","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\StaticVariables\\Styles.js":"11","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Home\\Carousel.jsx":"12","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Home\\Items.jsx":"13","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\Loading.js":"14","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Pay\\Pay.jsx":"15","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\signUp\\SubscModal.js":"16","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\UpdateInfo\\UpdateInfo.jsx":"17","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\Functions.js":"18","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Order\\OrderInfo.jsx":"19","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\ShoppingCart\\CartItems.jsx":"20","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Order\\AllOrdersData.jsx":"21","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Pay\\SubscModal.js":"22","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\UpdateInfo\\SubscModal.js":"23","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\Footer.jsx":"24","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\NavBar.jsx":"25","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\graphQlRequest.js":"26","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\graphQLQueries.js":"27"},{"size":547,"mtime":1670246447230,"results":"28","hashOfConfig":"29"},{"size":1595,"mtime":1670246447208,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1670246447231,"results":"31","hashOfConfig":"29"},{"size":2040,"mtime":1670494979379,"results":"32","hashOfConfig":"29"},{"size":621,"mtime":1670495021015,"results":"33","hashOfConfig":"29"},{"size":6349,"mtime":1670493742305,"results":"34","hashOfConfig":"29"},{"size":9871,"mtime":1670341744095,"results":"35","hashOfConfig":"29"},{"size":628,"mtime":1670342241954,"results":"36","hashOfConfig":"29"},{"size":567,"mtime":1670342005877,"results":"37","hashOfConfig":"29"},{"size":629,"mtime":1670495012706,"results":"38","hashOfConfig":"29"},{"size":1673,"mtime":1670495077519,"results":"39","hashOfConfig":"29"},{"size":1625,"mtime":1670246447217,"results":"40","hashOfConfig":"29"},{"size":4961,"mtime":1670310652346,"results":"41","hashOfConfig":"29"},{"size":480,"mtime":1670246447212,"results":"42","hashOfConfig":"29"},{"size":10298,"mtime":1670493826202,"results":"43","hashOfConfig":"29"},{"size":913,"mtime":1670341977003,"results":"44","hashOfConfig":"29"},{"size":10271,"mtime":1670493712142,"results":"45","hashOfConfig":"29"},{"size":962,"mtime":1670495000231,"results":"46","hashOfConfig":"29"},{"size":6438,"mtime":1670493923564,"results":"47","hashOfConfig":"29"},{"size":5238,"mtime":1670487191852,"results":"48","hashOfConfig":"29"},{"size":10395,"mtime":1670340511918,"results":"49","hashOfConfig":"29"},{"size":854,"mtime":1670493763083,"results":"50","hashOfConfig":"29"},{"size":656,"mtime":1670493727781,"results":"51","hashOfConfig":"29"},{"size":614,"mtime":1670246447211,"results":"52","hashOfConfig":"29"},{"size":4877,"mtime":1670246447213,"results":"53","hashOfConfig":"29"},{"size":1885,"mtime":1670314625418,"results":"54","hashOfConfig":"29"},{"size":3471,"mtime":1670495326661,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"174yr51",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\index.js",[],["112","113"],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\App.js",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\reportWebVitals.js",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Error\\Error.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Home\\Home.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\SignIn\\SignIn.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\signUp\\signUp.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\ShoppingCart\\Cartt.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Order\\Order.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Order\\AllOrders.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\StaticVariables\\Styles.js",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Home\\Carousel.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Home\\Items.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\Loading.js",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Pay\\Pay.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\signUp\\SubscModal.js",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\UpdateInfo\\UpdateInfo.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\Functions.js",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Order\\OrderInfo.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\ShoppingCart\\CartItems.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Order\\AllOrdersData.jsx",["114","115"],"import React, { Component } from 'react'\n\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\nimport LoadingIcon from '../General/Loading.js'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport uri from '../General/StaticVariables/uri.json'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport {graphQLRequest} from '../General/graphQlRequest'\nimport graphQLQueries from '../General/graphQLQueries'\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}))\n\nconst titleMenuColor = '#353A40'\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n})\nexport default class AllOrders extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      orders: [],\n      ordersTotalCount:0,\n      error:false,\n      status:'ALL',\n      page:0,\n      rowsPerPage:5\n      \n    }\n  }\n\n  handleChangeRowsPerPage = (event) => {\n    this.setState({ page: 0, rowsPerPage: parseInt(event.target.value, 10) })\n    this.getOrders(parseInt(event.target.value, 10), 0,this.state.status)\n  }\n\n  handleChangePage = (event, newPage) => {\n    this.setState({ page: newPage })\n    this.getOrders(this.state.rowsPerPage, newPage,this.state.status)\n  }\n\n  async getOrders(rowsPerPage, page, status){\n    this.setState({ loading: true })\n    if(status && status==='ALL')\n      status = null\n    const graphQLVariables = {limit:rowsPerPage,page:page+1,status:status}\n    await graphQLRequest(graphQLQueries.userOrders,graphQLVariables, localStorage.getItem('token'))\n      .then((response) => {\n          this.setState({\n            orders: response.orders.data,\n            ordersTotalCount: response.orders.totalSize,\n            loading: false\n          })\n      })\n      .catch((error) => {\n        this.setState({ loading: false, error: true })\n      })\n  }\n\n\n  getBadgeColor(status){\n    switch (status)\n{\n   case \"PENDING\": \n   case \"PAYMENTPROCESSING\": return '#FFBF00'\n   case \"PAYMENTFAILED\": return '#ff0000'\n   case \"PAID\": return '#00ff00'\n   default: return '#FFBF00'\n}\n  }\n\n  async componentDidMount() {\n    this.getOrders(this.state.rowsPerPage,this.state.page,this.state.status)\n  }\n\n  itemPrice(priceInCents){\n    var priceInDollars = priceInCents/100\n    return priceInDollars.toFixed(2)\n  }\n\n\n  loading() {\n    return (\n      <>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"collapsible table\">\n            <TableHeader />\n          </Table>\n        </TableContainer>\n        <br />\n        <LoadingIcon type=\"spin\" color=\"#5bc0de\" />\n      </>\n    )\n  }\n\n  Error(msg) {\n    return (\n      <>\n      <label>Filter by Order Status</label>\n        <DropdownButton id=\"dropdown-basic-button\" title={this.state.status}>\n      <Dropdown.Item onClick={(e) => this.handleStatus('PENDING')}>PENDING</Dropdown.Item>\n      <Dropdown.Item onClick={(e) => this.handleStatus('PAYMENTPROCESSING')}>PAYMENTPROCESSING</Dropdown.Item>\n      <Dropdown.Item onClick={(e) => this.handleStatus('PAYMENTFAILED')}>PAYMENTFAILED</Dropdown.Item>\n      <Dropdown.Item onClick={(e) => this.handleStatus('PAID')}>PAID</Dropdown.Item>\n      <Dropdown.Item onClick={(e) => this.handleStatus('ALL')}>ALL</Dropdown.Item>\n      </DropdownButton> \n      <br/>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"collapsible table\">\n            <TableHeader />\n          </Table>\n        </TableContainer>\n        <br />\n        <div style={{ paddingLeft: '10ex' }}>\n          <br />\n          <br />\n          <br />\n          {msg}\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n        </div>\n      </>\n    )\n  }\n\n  handleStatus(status){\n    this.setState({ status: status })\n    this.getOrders(this.state.rowsPerPage, 0,status)\n  }\n  render() {\n    if (this.state.loading) {\n      return this.loading()\n    } else if (this.state.orders.length===0) {\n      return this.Error(\n        staticVariables.messages.noOrdersTOShow\n      )\n    } else if (this.state.error) {\n      return this.Error(staticVariables.messages.somethingWrong)\n    } else {\n      return (\n        <>\n        <label>Filter by Order Status</label>\n        <DropdownButton id=\"dropdown-basic-button\" title={this.state.status}>\n      <Dropdown.Item onClick={(e) => this.handleStatus('PENDING')}>PENDING</Dropdown.Item>\n      <Dropdown.Item onClick={(e) => this.handleStatus('PAYMENTPROCESSING')}>PAYMENTPROCESSING</Dropdown.Item>\n      <Dropdown.Item onClick={(e) => this.handleStatus('PAYMENTFAILED')}>PAYMENTFAILED</Dropdown.Item>\n      <Dropdown.Item onClick={(e) => this.handleStatus('PAID')}>PAID</Dropdown.Item>\n      <Dropdown.Item onClick={(e) => this.handleStatus('ALL')}>ALL</Dropdown.Item>\n      </DropdownButton> \n    <br/>\n          <TableContainer component={Paper}>\n            <Table aria-label=\"collapsible table\">\n              <TableHeader />\n              <TableBody>\n                {this.state.orders.map((order) => (\n                  <Row\n                    row={order}\n                    priceMethod={this.itemPrice}\n                    badgeColor={this.getBadgeColor}\n                  />\n                ))}\n              </TableBody>\n\n                <TableFooter>\n                  <TableRow>\n                    <TablePagination\n                      rowsPerPageOptions={[5, 10, 25, 50]}\n                      colSpan={5}\n                      count={this.state.ordersTotalCount}\n                      rowsPerPage={this.state.rowsPerPage}\n                      page={this.state.page}\n                      SelectProps={{\n                        inputProps: { 'aria-label': 'rows per page' },\n                        native: true,\n                      }}\n                      onChangePage={this.handleChangePage}\n                      onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                      ActionsComponent={TablePaginationActions}\n                    />\n                  </TableRow>\n                </TableFooter>\n            </Table>\n          </TableContainer>\n\n          <br />\n        </>\n      )\n    }\n  }\n}\n\n\n\n\nfunction TableHeader() {\n  return (\n    <TableHead>\n      <TableRow style={{ backgroundColor: titleMenuColor }}>\n        <TableCell style={{ color: 'white' }}>\n          <b>Date-Time</b>\n        </TableCell>\n        <TableCell style={{ color: 'white' }} align=\"center\">\n          <b>Total Price</b>\n        </TableCell>\n        <TableCell style={{ color: 'white' }} align=\"center\">\n          <b>Status</b>\n        </TableCell>\n        <TableCell style={{ color: 'white' }} align=\"center\">\n          <b>Receipt</b>\n        </TableCell>\n        <TableCell style={{ color: 'white' }} align=\"center\">\n          <b>View Order</b>\n        </TableCell>\n        <TableCell style={{ color: 'white' }} align=\"center\"></TableCell>\n      </TableRow>\n    </TableHead>\n  )\n}\n\n\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\n\n\nfunction Row(props) {\n  const { row, priceMethod, badgeColor } = props\n  const classes = useRowStyles()\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.createdAt}\n        </TableCell>\n        {/* <TableCell align=\"center\">{row._id}</TableCell> */}\n        <TableCell align=\"center\">\n          {priceMethod(row.totalPrice)}$\n        </TableCell>\n        <TableCell align=\"center\" style={{color:badgeColor(row.status)}}>\n        {row.status}\n        </TableCell>\n        <TableCell align=\"center\">\n          {row.receiptUrl?<a href={row.receiptUrl} target=\"_blank\">Receipt</a>:<>Payment Success required to view receipt</>}\n        </TableCell>\n        <TableCell align=\"center\">\n        <a href={uri.order.replace(':id',row._id)} target=\"_blank\">Details</a>\n        </TableCell>\n      </TableRow>\n      \n    </React.Fragment>\n  )\n}\n","C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\Pay\\SubscModal.js",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\UpdateInfo\\SubscModal.js",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\Footer.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\NavBar.jsx",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\graphQlRequest.js",[],"C:\\Users\\a829547\\Desktop\\Mern and GraphQl Session\\FrontEnd\\E-Commerce-Demo-MERN-GraphQL\\src\\components\\General\\graphQLQueries.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":333,"column":27,"nodeType":"122","endLine":333,"endColumn":68},{"ruleId":"120","severity":1,"message":"121","line":336,"column":9,"nodeType":"122","endLine":336,"endColumn":68},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]